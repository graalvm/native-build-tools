/*
 * Copyright (c) 2020, 2021, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * The Universal Permissive License (UPL), Version 1.0
 *
 * Subject to the condition set forth below, permission is hereby granted to any
 * person obtaining a copy of this software, associated documentation and/or
 * data (collectively the "Software"), free of charge and under any and all
 * copyright rights in the Software, and any and all patent rights owned or
 * freely licensable by each licensor hereunder covering either (i) the
 * unmodified Software as contributed to or provided by such licensor, or (ii)
 * the Larger Works (as defined below), to deal in both
 *
 * (a) the Software, and
 *
 * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if
 * one is included with the Software each a "Larger Work" to which the Software
 * is contributed by such licensors),
 *
 * without restriction, including without limitation the rights to copy, create
 * derivative works of, display, perform, and distribute the Software and make,
 * use, sell, offer for sale, import, export, have made, and have sold the
 * Software and the Larger Work(s), and to sublicense the foregoing rights on
 * either these or other terms.
 *
 * This license is subject to the following condition:
 *
 * The above copyright notice and either this complete permission notice or at a
 * minimum a reference to the UPL must be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import org.gradle.util.GFileUtils

plugins {
    id 'java-library'
    id 'checkstyle'
    id 'signing'
    id 'org.graalvm.build.java'
    id 'org.graalvm.build.publishing'
}

maven {
    name = "JUnit Platform Native"
    description = 'JUnit Platform support for GraalVM Native Image'
}
dependencies {
    compileOnly libs.graalvm.svm
    implementation(platform(libs.test.junit.bom))
    implementation libs.test.junit.platform.console
    implementation libs.test.junit.platform.launcher
    implementation libs.test.junit.jupiter.core
    testImplementation libs.test.junit.vintage
}

apply from: "gradle/native-image-testing.gradle"

test {
    doFirst {
        GFileUtils.deleteDirectory(testIdsDir.get().asFile)
    }
    useJUnitPlatform() {
        systemProperty('junit.platform.listeners.uid.tracking.enabled', true)
        systemProperty('junit.platform.listeners.uid.tracking.output.dir', "${testIdsDir.get().asFile.absolutePath}/test_ids")
    }
}

tasks.withType(Test).configureEach {
    testLogging {
        events "standardOut", "passed", "skipped", "failed"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

tasks.withType(Checkstyle).configureEach {
    setConfigFile(layout.projectDirectory.dir("../../config/checkstyle.xml").asFile)
}
