#!/bin/bash -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
pushd $SCRIPT_DIR/../..

# Load new version info
source version.properties

GRADLE_PROPS="# Do not edit this file directly!
# Edit 'version.properties' in root of the repository and then use 'common/scripts/updateVersions.sh' to keep everything in sync.
$(tail -n +3 version.properties)"

TEST_VERSION_INFO="/*\n * Copyright (c) 2021, $(date +"%Y") Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * The Universal Permissive License (UPL), Version 1.0\n *\n * Subject to the condition set forth below, permission is hereby granted to any\n * person obtaining a copy of this software, associated documentation and/or\n * data (collectively the \"Software\"), free of charge and under any and all\n * copyright rights in the Software, and any and all patent rights owned or\n * freely licensable by each licensor hereunder covering either (i) the\n * unmodified Software as contributed to or provided by such licensor, or (ii)\n * the Larger Works (as defined below), to deal in both\n *\n * (a) the Software, and\n *\n * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n * one is included with the Software each a \"Larger Work\" to which the Software\n * is contributed by such licensors),\n *\n * without restriction, including without limitation the rights to copy, create\n * derivative works of, display, perform, and distribute the Software and make,\n * use, sell, offer for sale, import, export, have made, and have sold the\n * Software and the Larger Work(s), and to sublicense the foregoing rights on\n * either these or other terms.\n *\n * This license is subject to the following condition:\n *\n * The above copyright notice and either this complete permission notice or at a\n * minimum a reference to the UPL must be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */
package org.graalvm.buildtools;

// Do not edit this file directly!
// Edit 'version.properties' in root of the repository and then use 'common/scripts/updateVersions.sh' to keep everything in sync.
public class VersionInfo {
    public static final String JUNIT_PLATFORM_NATIVE_VERSION = \"${junit_platform_native_version}\";
}
"

# Update junit-platform-native
echo -e "$GRADLE_PROPS" > common/junit-platform-native/gradle.properties

# Update gradle plugin
pushd native-gradle-plugin
echo -e "$GRADLE_PROPS" > gradle.properties
echo -e "$TEST_VERSION_INFO" > src/main/java/org/graalvm/buildtools/VersionInfo.java
popd

# Update gradle plugin example
echo -e "$GRADLE_PROPS" > examples/gradle/gradle.properties

# Update maven plugin
pushd native-maven-plugin
mvn versions:set -DnewVersion=${native_maven_plugin_version} -DgenerateBackupPoms=false
mvn versions:set-property -Dproperty=junit.platform.native -DnewVersion=${junit_platform_native_version} -DgenerateBackupPoms=false
echo -e "$TEST_VERSION_INFO" > src/main/java/org/graalvm/buildtools/VersionInfo.java
popd

# Update maven plugin example
pushd examples/maven
mvn versions:set-property -Dproperty=junit.jupiter.version -DnewVersion=${junit_jupiter_version} -DgenerateBackupPoms=false
mvn versions:set-property -Dproperty=native.maven.plugin.version -DnewVersion=${native_maven_plugin_version} -DgenerateBackupPoms=false
mvn versions:set-property -Dproperty=junit.platform.native -DnewVersion=${junit_platform_native_version} -DgenerateBackupPoms=false
popd

popd
