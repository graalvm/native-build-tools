name: 'ðŸ”§ Prepare environment'
description: 'Prepare the environment for testing'

inputs:
  github-token:
    description: 'secrets.GITHUB_TOKEN'
    required: false
    default: ''
  java-version:
    description: 'Java version to use'
    required: false
    default: '17'
  push-access:
    description: 'Does this workflow require push access?'
    required: false
    default: '0'
  ssh-key:
    description: 'secrets.SSH_PRIVATE_KEY'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: "ðŸ”§ Setup Java 11"
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
      if: runner.os == 'Windows'
    - name: "ðŸ”§ Install GraalVM (JDK${{ inputs.java-version }})"
      uses: graalvm/setup-graalvm@main
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'graalvm'
        github-token: ${{ inputs.github-token }}
    - name: "ðŸ”’ Configure push access"
      if: ${{ inputs.push-access == '1' }}
      shell: "bash"
      env:
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        GIT_SSH: "ssh"
        SSH_PRIVATE_KEY: "${{ inputs.ssh-key }}"
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 700 -R ~/.ssh
        ssh-keygen -p -f ~/.ssh/id_rsa -m pem
        eval "$(ssh-agent -s)"
        ssh-add
        ssh git@github.com || true
        git config --global user.name 'graalvm bot'
        git config --global user.email 'graalvmbot@users.noreply.github.com'
        echo "org.ajoberstar.grgit.auth.command.allow=true" >> gradle.properties
